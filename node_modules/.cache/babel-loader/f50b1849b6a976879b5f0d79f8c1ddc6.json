{"ast":null,"code":"var _jsxFileName = \"/Users/abdalla/Desktop/github-finder/src/components/users/Users.js\";\nimport React, { useContext } from 'react';\nimport UserItem from './UserItem';\nimport PropTypes from 'prop-types';\nimport Spinner from '../layout/Spinner';\nimport GithubContext from '../../context/github/githubContext';\n\nconst Users = () => {\n  const githubContext = useContext(GithubContext);\n  const {\n    loading,\n    users\n  } = githubContext;\n\n  if (loading) {\n    return React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    });\n  } else {\n    return React.createElement(\"div\", {\n      style: userStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, users.map(user => {\n      return React.createElement(UserItem, {\n        key: user.id,\n        user: user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      });\n    }));\n  }\n};\n\nconst userStyle = {\n  display: 'grid',\n  gridTemplateColumns: 'repeat(3, 1fr)',\n  gridGap: '1rem'\n};\nUsers.propType = {\n  users: PropTypes.array.isRequired,\n  loading: PropTypes.bool.isRequired\n};\nexport default Users;","map":{"version":3,"sources":["/Users/abdalla/Desktop/github-finder/src/components/users/Users.js"],"names":["React","useContext","UserItem","PropTypes","Spinner","GithubContext","Users","githubContext","loading","users","userStyle","map","user","id","display","gridTemplateColumns","gridGap","propType","array","isRequired","bool"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,aAAP,MAA0B,oCAA1B;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAMC,aAAa,GAAGN,UAAU,CAACI,aAAD,CAAhC;AAEA,QAAM;AAAEG,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAqBF,aAA3B;;AAEA,MAAIC,OAAJ,EAAa;AACX,WAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFD,MAEO;AACL,WACE;AAAK,MAAA,KAAK,EAAEE,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,KAAK,CAACE,GAAN,CAAUC,IAAI,IAAI;AACjB,aAAO,oBAAC,QAAD;AAAU,QAAA,GAAG,EAAEA,IAAI,CAACC,EAApB;AAAwB,QAAA,IAAI,EAAED,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFA,CADH,CADF;AAOD;AACF,CAhBD;;AAkBA,MAAMF,SAAS,GAAG;AAChBI,EAAAA,OAAO,EAAE,MADO;AAEhBC,EAAAA,mBAAmB,EAAE,gBAFL;AAGhBC,EAAAA,OAAO,EAAE;AAHO,CAAlB;AAMAV,KAAK,CAACW,QAAN,GAAiB;AACfR,EAAAA,KAAK,EAAEN,SAAS,CAACe,KAAV,CAAgBC,UADR;AAEfX,EAAAA,OAAO,EAAEL,SAAS,CAACiB,IAAV,CAAeD;AAFT,CAAjB;AAKA,eAAeb,KAAf","sourcesContent":["import React, { useContext } from 'react';\nimport UserItem from './UserItem';\nimport PropTypes from 'prop-types';\nimport Spinner from '../layout/Spinner';\nimport GithubContext from '../../context/github/githubContext';\n\nconst Users = () => {\n  const githubContext = useContext(GithubContext);\n\n  const { loading, users } = githubContext;\n\n  if (loading) {\n    return <Spinner />;\n  } else {\n    return (\n      <div style={userStyle}>\n        {users.map(user => {\n          return <UserItem key={user.id} user={user} />;\n        })}\n      </div>\n    );\n  }\n};\n\nconst userStyle = {\n  display: 'grid',\n  gridTemplateColumns: 'repeat(3, 1fr)',\n  gridGap: '1rem'\n};\n\nUsers.propType = {\n  users: PropTypes.array.isRequired,\n  loading: PropTypes.bool.isRequired\n};\n\nexport default Users;\n"]},"metadata":{},"sourceType":"module"}