{"ast":null,"code":"var _jsxFileName = \"/Users/abdalla/Desktop/github-finder/src/context/github/GithubState.js\";\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport GithubContext from './githubContext';\nimport GithubReducer from './githubReducer';\nimport { SEARCH_USERS, SET_LOADING, CLEAR_USERS, GET_USER, GET_REPOS } from '../types';\nimport githubContext from './githubContext';\n\nconst GithubState = props => {\n  const initialState = {\n    users: [],\n    user: {},\n    repos: [],\n    loaading: false\n  };\n  const [state, dispatch] = useReducer(GithubReducer, initialState); // Search Users\n  // Get User\n  // Get Repos\n  // Clear Users\n  // Set Loading\n\n  return React.createElement(GithubContext.Provider, {\n    value: {\n      users: state.users,\n      user: state.user,\n      repose: state.repos,\n      loaading: state.loaading\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, this.props.children);\n};\n\nexport default GithubState;","map":{"version":3,"sources":["/Users/abdalla/Desktop/github-finder/src/context/github/GithubState.js"],"names":["React","useReducer","axios","GithubContext","GithubReducer","SEARCH_USERS","SET_LOADING","CLEAR_USERS","GET_USER","GET_REPOS","githubContext","GithubState","props","initialState","users","user","repos","loaading","state","dispatch","repose","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SACEC,YADF,EAEEC,WAFF,EAGEC,WAHF,EAIEC,QAJF,EAKEC,SALF,QAMO,UANP;AAOA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAC3B,QAAMC,YAAY,GAAG;AACnBC,IAAAA,KAAK,EAAE,EADY;AAEnBC,IAAAA,IAAI,EAAE,EAFa;AAGnBC,IAAAA,KAAK,EAAE,EAHY;AAInBC,IAAAA,QAAQ,EAAE;AAJS,GAArB;AAOA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBlB,UAAU,CAACG,aAAD,EAAgBS,YAAhB,CAApC,CAR2B,CAU3B;AAEA;AAEA;AAEA;AAEA;;AAEA,SACE,oBAAC,aAAD,CAAe,QAAf;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EAAEI,KAAK,CAACJ,KADR;AAELC,MAAAA,IAAI,EAAEG,KAAK,CAACH,IAFP;AAGLK,MAAAA,MAAM,EAAEF,KAAK,CAACF,KAHT;AAILC,MAAAA,QAAQ,EAAEC,KAAK,CAACD;AAJX,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQG,KAAKL,KAAL,CAAWS,QARd,CADF;AAYD,CAhCD;;AAkCA,eAAeV,WAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport GithubContext from './githubContext';\nimport GithubReducer from './githubReducer';\nimport {\n  SEARCH_USERS,\n  SET_LOADING,\n  CLEAR_USERS,\n  GET_USER,\n  GET_REPOS\n} from '../types';\nimport githubContext from './githubContext';\n\nconst GithubState = props => {\n  const initialState = {\n    users: [],\n    user: {},\n    repos: [],\n    loaading: false\n  };\n\n  const [state, dispatch] = useReducer(GithubReducer, initialState);\n\n  // Search Users\n\n  // Get User\n\n  // Get Repos\n\n  // Clear Users\n\n  // Set Loading\n\n  return (\n    <GithubContext.Provider\n      value={{\n        users: state.users,\n        user: state.user,\n        repose: state.repos,\n        loaading: state.loaading\n      }}\n    >\n      {this.props.children}\n    </GithubContext.Provider>\n  );\n};\n\nexport default GithubState;\n"]},"metadata":{},"sourceType":"module"}