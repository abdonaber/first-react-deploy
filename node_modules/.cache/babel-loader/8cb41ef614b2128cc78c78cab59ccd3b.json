{"ast":null,"code":"var _jsxFileName = \"/Users/abdalla/Desktop/github-finder/src/components/users/Search.js\";\nimport React, { useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport GithubContext from '../../context/github/githubContext';\n\nconst Search = ({\n  showClear,\n  clearUsers,\n  showAlert\n}) => {\n  const githubContext = useContext(GithubContext);\n  const [text, setText] = useState('');\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (text === '') {\n      setAlert('Please inter something...', 'light');\n    } else {\n      githubContext.searchUsers(text);\n      setText('');\n    }\n  };\n\n  const onChange = e => setText(e.target.value);\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    name: \"text\",\n    placeholder: \"Search Users...\",\n    value: text,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"search\",\n    className: \"btn btn-dark btn-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  })), showClear && React.createElement(\"button\", {\n    className: \"btn btn-light btn-block\",\n    onClick: clearUsers,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Clear\"));\n};\n\nSearch.propType = {\n  clearchUsers: PropTypes.func.isRequired,\n  showClear: PropTypes.bool.isRequired,\n  setAlert: PropTypes.func.isRequired\n};\nexport default Search;","map":{"version":3,"sources":["/Users/abdalla/Desktop/github-finder/src/components/users/Search.js"],"names":["React","useState","useContext","PropTypes","GithubContext","Search","showClear","clearUsers","showAlert","githubContext","text","setText","onSubmit","e","preventDefault","setAlert","searchUsers","onChange","target","value","propType","clearchUsers","func","isRequired","bool"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,aAAP,MAA0B,oCAA1B;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,UAAb;AAAyBC,EAAAA;AAAzB,CAAD,KAA0C;AACvD,QAAMC,aAAa,GAAGP,UAAU,CAACE,aAAD,CAAhC;AAEA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMW,QAAQ,GAAGC,CAAC,IAAI;AACpBA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAIJ,IAAI,KAAK,EAAb,EAAiB;AACfK,MAAAA,QAAQ,CAAC,2BAAD,EAA8B,OAA9B,CAAR;AACD,KAFD,MAEO;AACLN,MAAAA,aAAa,CAACO,WAAd,CAA0BN,IAA1B;AACAC,MAAAA,OAAO,CAAC,EAAD,CAAP;AACD;AACF,GARD;;AAUA,QAAMM,QAAQ,GAAGJ,CAAC,IAAIF,OAAO,CAACE,CAAC,CAACK,MAAF,CAASC,KAAV,CAA7B;;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAuB,IAAA,QAAQ,EAAEP,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,WAAW,EAAC,iBAHd;AAIE,IAAA,KAAK,EAAEF,IAJT;AAKE,IAAA,QAAQ,EAAEO,QALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,KAAK,EAAC,QAFR;AAGE,IAAA,SAAS,EAAC,wBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF,EAeGX,SAAS,IACR;AAAQ,IAAA,SAAS,EAAC,yBAAlB;AAA4C,IAAA,OAAO,EAAEC,UAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAhBJ,CADF;AAuBD,CAxCD;;AA0CAF,MAAM,CAACe,QAAP,GAAkB;AAChBC,EAAAA,YAAY,EAAElB,SAAS,CAACmB,IAAV,CAAeC,UADb;AAEhBjB,EAAAA,SAAS,EAAEH,SAAS,CAACqB,IAAV,CAAeD,UAFV;AAGhBR,EAAAA,QAAQ,EAAEZ,SAAS,CAACmB,IAAV,CAAeC;AAHT,CAAlB;AAMA,eAAelB,MAAf","sourcesContent":["import React, { useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport GithubContext from '../../context/github/githubContext';\n\nconst Search = ({ showClear, clearUsers, showAlert }) => {\n  const githubContext = useContext(GithubContext);\n\n  const [text, setText] = useState('');\n\n  const onSubmit = e => {\n    e.preventDefault();\n    if (text === '') {\n      setAlert('Please inter something...', 'light');\n    } else {\n      githubContext.searchUsers(text);\n      setText('');\n    }\n  };\n\n  const onChange = e => setText(e.target.value);\n\n  return (\n    <div>\n      <form className='form' onSubmit={onSubmit}>\n        <input\n          type='text'\n          name='text'\n          placeholder='Search Users...'\n          value={text}\n          onChange={onChange}\n        />\n        <input\n          type='submit'\n          value='search'\n          className='btn btn-dark btn-block'\n        />\n      </form>\n      {showClear && (\n        <button className='btn btn-light btn-block' onClick={clearUsers}>\n          Clear\n        </button>\n      )}\n    </div>\n  );\n};\n\nSearch.propType = {\n  clearchUsers: PropTypes.func.isRequired,\n  showClear: PropTypes.bool.isRequired,\n  setAlert: PropTypes.func.isRequired\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}