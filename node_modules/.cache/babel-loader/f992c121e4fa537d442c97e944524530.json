{"ast":null,"code":"var _jsxFileName = \"/Users/abdalla/Desktop/github-finder/src/context/github/GithubState.js\";\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport GithubContext from './githubContext';\nimport GithubReducer from './githubReducer';\nimport { SEARCH_USERS, SET_LOADING, CLEAR_USERS, GET_USER, GET_REPOS } from '../types';\n\nconst GithubState = props => {\n  const initialState = {\n    users: [],\n    user: {},\n    repos: [],\n    loaading: false\n  };\n  const [state, dispatch] = useReducer(GithubReducer, initialState); // Search Users\n\n  const searchUsers = async text => {\n    setLoading();\n    const res = await axios.get(`https://api.github.com/search/users?q=${text}&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n    dispatch({\n      type: SEARCH_USERS,\n      payload: res.data.items\n    });\n  }; // Get User\n  // Get Repos\n  // Clear Users\n\n\n  const clearUsers = () => dispatch({\n    type: CLEAR_USERS\n  }); // Set Loading\n\n\n  const setLoading = () => dispatch({\n    type: SET_LOADING\n  });\n\n  return React.createElement(GithubContext.Provider, {\n    value: {\n      users: state.users,\n      user: state.user,\n      repose: state.repos,\n      loaading: state.loaading,\n      searchUsers\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default GithubState;","map":{"version":3,"sources":["/Users/abdalla/Desktop/github-finder/src/context/github/GithubState.js"],"names":["React","useReducer","axios","GithubContext","GithubReducer","SEARCH_USERS","SET_LOADING","CLEAR_USERS","GET_USER","GET_REPOS","GithubState","props","initialState","users","user","repos","loaading","state","dispatch","searchUsers","text","setLoading","res","get","process","env","REACT_APP_GITHUB_CLIENT_ID","REACT_APP_GITHUB_CLIENT_SECRET","type","payload","data","items","clearUsers","repose","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SACEC,YADF,EAEEC,WAFF,EAGEC,WAHF,EAIEC,QAJF,EAKEC,SALF,QAMO,UANP;;AAQA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAC3B,QAAMC,YAAY,GAAG;AACnBC,IAAAA,KAAK,EAAE,EADY;AAEnBC,IAAAA,IAAI,EAAE,EAFa;AAGnBC,IAAAA,KAAK,EAAE,EAHY;AAInBC,IAAAA,QAAQ,EAAE;AAJS,GAArB;AAOA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBjB,UAAU,CAACG,aAAD,EAAgBQ,YAAhB,CAApC,CAR2B,CAU3B;;AAEA,QAAMO,WAAW,GAAG,MAAMC,IAAN,IAAc;AAChCC,IAAAA,UAAU;AAEV,UAAMC,GAAG,GAAG,MAAMpB,KAAK,CAACqB,GAAN,CACf,yCAAwCH,IAAK,cAAaI,OAAO,CAACC,GAAR,CAAYC,0BAA2B,kBAAiBF,OAAO,CAACC,GAAR,CAAYE,8BAA+B,EAD9I,CAAlB;AAIAT,IAAAA,QAAQ,CAAC;AACPU,MAAAA,IAAI,EAAEvB,YADC;AAEPwB,MAAAA,OAAO,EAAEP,GAAG,CAACQ,IAAJ,CAASC;AAFX,KAAD,CAAR;AAID,GAXD,CAZ2B,CAyB3B;AAEA;AAEA;;;AACA,QAAMC,UAAU,GAAG,MAAMd,QAAQ,CAAC;AAAEU,IAAAA,IAAI,EAAErB;AAAR,GAAD,CAAjC,CA9B2B,CAgC3B;;;AACA,QAAMc,UAAU,GAAG,MAAMH,QAAQ,CAAC;AAAEU,IAAAA,IAAI,EAAEtB;AAAR,GAAD,CAAjC;;AAEA,SACE,oBAAC,aAAD,CAAe,QAAf;AACE,IAAA,KAAK,EAAE;AACLO,MAAAA,KAAK,EAAEI,KAAK,CAACJ,KADR;AAELC,MAAAA,IAAI,EAAEG,KAAK,CAACH,IAFP;AAGLmB,MAAAA,MAAM,EAAEhB,KAAK,CAACF,KAHT;AAILC,MAAAA,QAAQ,EAAEC,KAAK,CAACD,QAJX;AAKLG,MAAAA;AALK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASGR,KAAK,CAACuB,QATT,CADF;AAaD,CAhDD;;AAkDA,eAAexB,WAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport GithubContext from './githubContext';\nimport GithubReducer from './githubReducer';\nimport {\n  SEARCH_USERS,\n  SET_LOADING,\n  CLEAR_USERS,\n  GET_USER,\n  GET_REPOS\n} from '../types';\n\nconst GithubState = props => {\n  const initialState = {\n    users: [],\n    user: {},\n    repos: [],\n    loaading: false\n  };\n\n  const [state, dispatch] = useReducer(GithubReducer, initialState);\n\n  // Search Users\n\n  const searchUsers = async text => {\n    setLoading();\n\n    const res = await axios.get(\n      `https://api.github.com/search/users?q=${text}&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\n    );\n\n    dispatch({\n      type: SEARCH_USERS,\n      payload: res.data.items\n    });\n  };\n\n  // Get User\n\n  // Get Repos\n\n  // Clear Users\n  const clearUsers = () => dispatch({ type: CLEAR_USERS });\n\n  // Set Loading\n  const setLoading = () => dispatch({ type: SET_LOADING });\n\n  return (\n    <GithubContext.Provider\n      value={{\n        users: state.users,\n        user: state.user,\n        repose: state.repos,\n        loaading: state.loaading,\n        searchUsers\n      }}\n    >\n      {props.children}\n    </GithubContext.Provider>\n  );\n};\n\nexport default GithubState;\n"]},"metadata":{},"sourceType":"module"}