{"ast":null,"code":"var _jsxFileName = \"/Users/abdalla/Desktop/github-finder/src/components/users/User.js\";\nimport React, { Fragment, Component } from 'react';\nimport Spinner from '../layout/Spinner';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nclass User extends Component {\n  componentDidMount() {\n    this.props.getUser(this.props.match.params.login);\n  }\n\n  render() {\n    const {\n      name,\n      company,\n      avatar_url,\n      location,\n      bio,\n      blog,\n      login,\n      html_url,\n      followers,\n      following,\n      public_repos,\n      public_gists,\n      hireable\n    } = this.props.user;\n    const {\n      loading\n    } = this.props;\n    if (loading) return React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    });\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      className: \"btn btn-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Back to Search\"), \"Hireable:\", ' ', hireable ? React.createElement(\"i\", {\n      className: \"fas fa-check text-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }) : React.createElement(\"i\", {\n      className: \"fas fa-times-circle text-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"card grid-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"all-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: avatar_url,\n      className: \"round-img\",\n      alt: \"\",\n      style: {\n        width: '150px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Location: \", location)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, bio && React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Bio\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, bio)), React.createElement(\"a\", {\n      href: html_url,\n      className: \"btn btn-dark my-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Visit Github Profile\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, login && React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Username: \"), \" \", login)), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, company && React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Company: \"), \" \", company)), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, blog && React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Website: \"), \" \", blog))))), React.createElement(\"div\", {\n      className: \"card text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"badge badge-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Followers: \", followers), React.createElement(\"div\", {\n      className: \"badge badge-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Following: \", following), React.createElement(\"div\", {\n      className: \"badge badge-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Public Repos: \", public_repos), React.createElement(\"div\", {\n      className: \"badge badge-dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Public Gists: \", public_gists)));\n  }\n\n}\n\nUser.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  user: PropTypes.object.isRequired,\n  getUser: PropTypes.func.isRequired\n};\nexport default User;","map":{"version":3,"sources":["/Users/abdalla/Desktop/github-finder/src/components/users/User.js"],"names":["React","Fragment","Component","Spinner","PropTypes","Link","User","componentDidMount","props","getUser","match","params","login","render","name","company","avatar_url","location","bio","blog","html_url","followers","following","public_repos","public_gists","hireable","user","loading","width","propTypes","bool","isRequired","object","func"],"mappings":"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","sourcesContent":["import React, { Fragment, Component } from 'react';\nimport Spinner from '../layout/Spinner';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nclass User extends Component {\n  componentDidMount() {\n    this.props.getUser(this.props.match.params.login);\n  }\n\n  static propTypes = {\n    loading: PropTypes.bool.isRequired,\n    user: PropTypes.object.isRequired,\n    getUser: PropTypes.func.isRequired\n  };\n\n  render() {\n    const {\n      name,\n      company,\n      avatar_url,\n      location,\n      bio,\n      blog,\n      login,\n      html_url,\n      followers,\n      following,\n      public_repos,\n      public_gists,\n      hireable\n    } = this.props.user;\n\n    const { loading } = this.props;\n\n    if (loading) return <Spinner />;\n\n    return (\n      <Fragment>\n        <Link to='/' className='btn btn-light'>\n          Back to Search\n        </Link>\n        Hireable:{' '}\n        {hireable ? (\n          <i className='fas fa-check text-success' />\n        ) : (\n          <i className='fas fa-times-circle text-danger' />\n        )}\n        <div className='card grid-2'>\n          <div className='all-center'>\n            <img\n              src={avatar_url}\n              className='round-img'\n              alt=''\n              style={{ width: '150px' }}\n            />\n            <h1>{name}</h1>\n            <p>Location: {location}</p>\n          </div>\n          <div>\n            {bio && (\n              <Fragment>\n                <h1>Bio</h1>\n                <p>{bio}</p>\n              </Fragment>\n            )}\n            <a href={html_url} className='btn btn-dark my-1'>\n              Visit Github Profile\n            </a>\n            <ul>\n              <li>\n                {login && (\n                  <Fragment>\n                    <strong>Username: </strong> {login}\n                  </Fragment>\n                )}\n              </li>\n              <li>\n                {company && (\n                  <Fragment>\n                    <strong>Company: </strong> {company}\n                  </Fragment>\n                )}\n              </li>\n              <li>\n                {blog && (\n                  <Fragment>\n                    <strong>Website: </strong> {blog}\n                  </Fragment>\n                )}\n              </li>\n            </ul>\n          </div>\n        </div>\n        <div className='card text-center'>\n          <div className='badge badge-primary'>Followers: {followers}</div>\n          <div className='badge badge-success'>Following: {following}</div>\n          <div className='badge badge-light'>Public Repos: {public_repos}</div>\n          <div className='badge badge-dark'>Public Gists: {public_gists}</div>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default User;\n"]},"metadata":{},"sourceType":"module"}